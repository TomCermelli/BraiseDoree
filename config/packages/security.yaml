
security:
    encoders:
      App\Entity\User:
          algorithm: bcrypt

    providers:
        in_memory: { memory: null }
        in_database:
          entity:
            class: App\Entity\User
            property: mail
            #le providers est le comportement que l'on veut utiliser par la ensuite
            #in_database veut dire que l'on va demander à symfony d'aller chercher l'attribut mail dans la classe User pour le login


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: true
            provider: in_database
            #on utilise le provider personalisé qui se trouve au dessus

            #on indique le chemin qu'il doit prendre pour le formulaire login
            form_login:
              login_path: security_login
              check_path: security_login


            logout:
              path: security_logout
              target: contact_index



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
